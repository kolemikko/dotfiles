#+TITLE: Dotfiles configuration

* GUI
** Xinitrc

#+begin_src sh :tangle ../.xinitrc :shebang "#!/bin/sh"
  userresources=$HOME/.Xresources
  usermodmap=$HOME/.Xmodmap
  sysresources=/etc/X11/xinit/.Xresources
  sysmodmap=/etc/X11/xinit/.Xmodmap

  # merge in defaults and keymaps

  if [ -f $sysresources ]; then
      xrdb -merge $sysresources
  fi

  if [ -f $sysmodmap ]; then
      xmodmap $sysmodmap
  fi

  if [ -f "$userresources" ]; then
      xrdb -merge "$userresources"
  fi

  if [ -f "$usermodmap" ]; then
      xmodmap "$usermodmap"
  fi

  # start some nice programs
  if [ -d /etc/X11/xinit/xinitrc.d ] ; then
   for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do
    [ -x "$f" ] && . "$f"
   done
   unset f
  fi

  exec bspwm
#+end_src

** Xresources

#+begin_src sh :tangle ../.Xresources
  Xft.dpi: 140
#+end_src

** Xmodmap

#+begin_src sh :tangle ../.Xmodmap

  ! natural scrolling
  pointer = 1 2 3 5 4 7 6 8 9 10 11 12

  ! caps to esc
  clear lock
  keycode 66 = Escape

#+end_src

** Bspwm
*** Bspwmrc

#+begin_src sh :tangle ../.config/bspwm/bspwmrc :mkdirp yes :shebang "#!/bin/sh"
  pgrep -x sxhkd > /dev/null || sxhkd &

  bspc monitor -d I II III IV V VI VII VIII IX X

  bspc config border_width         3
  bspc config window_gap          14

  bspc config split_ratio          0.52
  bspc config borderless_monocle   true
  bspc config gapless_monocle      true

  $HOME/.config/polybar/launch.sh
#+end_src

*** Sxhkdrc
**** Own

#+begin_src sh :tangle ../.config/sxhkd/sxhkdrc :mkdirp yes

  super + Return
          alacritty

  super + @space
          ulauncher

  Print
          scrot

  XF86MonBrightnessUp
          xbacklight -inc 10

  XF86MonBrightnessDown
          xbacklight -inc 10

  XF86AudioRaiseVolume
          amixer set Master 5%+

  XF86AudioLowerVolume
          amixer set Master 5%-

  XF86AudioMute
          amixer set Master toggle

#+end_src

**** Generic

#+begin_src sh :tangle ../.config/sxhkd/sxhkdrc :mkdirp yes

  # make sxhkd reload its configuration files:
  super + Escape
          pkill -USR1 -x sxhkd

  # quit/restart bspwm
  super + alt + {q,r}
          bspc {quit,wm -r}

  # close and kill
  super + {_,shift + }w
          bspc node -{c,k}

  # alternate between the tiled and monocle layout
  super + m
          bspc desktop -l next

  # send the newest marked node to the newest preselected node
  super + y
          bspc node newest.marked.local -n newest.!automatic.local

  # swap the current node and the biggest window
  super + g
          bspc node -s biggest.window

  #
  # state/flags
  #

  # set the window state
  super + {t,shift + t,s,f}
          bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

  # set the node flags
  super + ctrl + {m,x,y,z}
          bspc node -g {marked,locked,sticky,private}

  #
  # focus/swap
  #

  # focus the node in the given direction
  super + {_,shift + }{h,j,k,l}
          bspc node -{f,s} {west,south,north,east}

  # focus the node in the given direction with arrows
  super + {_,shift + }{Left,Down,Up,Right}
          bspc node -{f,s} {west,south,north,east}

  # focus the node for the given path jump
  super + {p,b,comma,period}
          bspc node -f @{parent,brother,first,second}

  # focus the next/previous window in the current desktop
  super + {_,shift + }c
          bspc node -f {next,prev}.local.!hidden.window

  # focus the next/previous desktop in the current monitor
  super + bracket{left,right}
          bspc desktop -f {prev,next}.local

  # focus the last node/desktop
  super + {grave,Tab}
          bspc {node,desktop} -f last

  # focus the older or newer node in the focus history
  super + {o,i}
          bspc wm -h off; \
          bspc node {older,newer} -f; \
          bspc wm -h on

  # focus or send to the given desktop
  super + {_,shift + }{1-9,0}
          bspc {desktop -f,node -d} '^{1-9,10}'

  #
  # preselect
  #

  # preselect the direction
  super + ctrl + {h,j,k,l}
          bspc node -p {west,south,north,east}

  # preselect the ratio
  super + ctrl + {1-9}
          bspc node -o 0.{1-9}

  # cancel the preselection for the focused node
  super + ctrl + space
          bspc node -p cancel

  # cancel the preselection for the focused desktop
  super + ctrl + shift + space
          bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

  #
  # move/resize
  #

  # expand a window by moving one of its side outward
  super + alt + {h,j,k,l}
          bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

  # expand a window with arrows
  super + alt + {Left,Down,Up,Right}
          bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

  # contract a window by moving one of its side inward
  super + alt + shift + {h,j,k,l}
          bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

  # contract a window with arrows
  super + alt + shift + {Left,Down,Up,Right}
          bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

  # move a floating window
  super + {Left,Down,Up,Right}
          bspc node -v {-20 0,0 20,0 -20,20 0}
#+end_src

** Polybar
*** Config

#+begin_src sh :tangle ../.config/polybar/config :mkdirp yes

  [colors]
  background = #222
  background-alt = #444
  foreground = #dfdfdf
  foreground-alt = #888
  primary = #ffb52a
  secondary = #e60053
  alert = #bd2c40

  [bar/main]
  width = 100%
  height = 4%
  radius = 6.0
  fixed-center = false
  bottom = true

  background = ${colors.background}
  foreground = ${colors.foreground}

  border-size = 0
  line-size = 2
  padding = 1
  module-margin = 1

  font-0 = "Noto Sans Mono:size=12;1"
  font-1 = "Noto Sans Mono:size=12;1"
  font-2 = "Noto Sans Symbols:size=12;1"
  font-3 = "Noto Sans Symbols2:size=12;1"

  modules-left = date bspwm xwindow
  modules-center =
  modules-right = alsa wlan battery

  tray-position = right
  tray-padding = 2
  tray-maxsize = 24

  wm-restack = bspwm

  [settings]
  screenchange-reload = true

  [global/wm]
  margin-top = 0

  [module/xwindow]
  type = internal/xwindow
  label = %title:0:30:...%

  [module/date]
  type = internal/date
  interval = 5

  date = "%a %d"
  date-alt = %a %d %b

  time = %H:%M
  time-alt = %H:%M

  format-prefix-foreground = ${colors.foreground-alt}

  label = %date% %time%

  [module/bspwm]
  type = internal/bspwm
  pin-workspaces = false
  enable-click = false
  enable-scroll = false

  label-focused = " %name% "
  label-focused-underline = #fba922

  label-occupied = " %name% "
  label-occupied-foreground = #ffaa00

  label-urgent = " %name% "
  label-urgent-underline = #9b0a20

  label-empty = " %name% "
  label-empty-foreground = #555555

  [module/alsa]
  type = internal/alsa

  format-volume = <label-volume>
  label-volume = VOL %percentage%%
  label-volume-foreground = ${root.foreground}
  label-volume-underline = #ffb52a

  format-muted-prefix = "îˆ‚ "
  format-muted-foreground = ${colors.foreground-alt}
  format-muted-underline = ${colors.alert}
  label-muted = muted

  [module/wlan]
  type = internal/network
  interface = wlp0s20f3
  interval = 5.0

  format-connected = <ramp-signal> <label-connected>
  format-connected-underline = #9f78e1
  label-connected = %essid%

  label-disconnected =

  ramp-signal-0 = ðŸŒ§
  ramp-signal-1 = ðŸŒ¦
  ramp-signal-2 = ðŸŒ¥
  ramp-signal-3 = ðŸŒ¤
  ramp-signal-4 = ðŸŒ£


  [module/battery]
  type = internal/battery
  battery = BAT0
  adapter = AC
  full-at = 98

  format-charging = <animation-charging> <label-charging>
  format-charging-underline = #ffb52a

  format-discharging = <animation-discharging> <label-discharging>
  format-discharging-underline = ${self.format-charging-underline}

  format-full-prefix = "îˆº "
  format-full-prefix-foreground = ${colors.foreground-alt}
  format-full-underline = ${self.format-charging-underline}

  ramp-capacity-0 = îˆ¶
  ramp-capacity-1 = îˆ·
  ramp-capacity-2 = îˆ¸
  ramp-capacity-foreground = ${colors.foreground-alt}

  animation-charging-0 = îˆ¶
  animation-charging-1 = îˆ·
  animation-charging-2 = îˆ¸
  animation-charging-foreground = ${colors.foreground-alt}
  animation-charging-framerate = 750

  animation-discharging-0 = îˆ¸
  animation-discharging-1 = îˆ·
  animation-discharging-2 = îˆ¶
  animation-discharging-foreground = ${colors.foreground-alt}
  animation-discharging-framerate = 750

#+end_src

*** Launch.sh

#+begin_src sh :tangle ../.config/polybar/launch.sh :mkdirp yes :shebang "#!/bin/sh"

  killall -q polybar

  # Wait until the processes have been shut down
  while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done

  exec polybar --reload main

#+end_src

* Apps
** Alacritty
*** Window

#+begin_src sh :tangle ../.config/alacritty/alacritty.yml

  # Any items in the `env` entry below will be added as
  # environment variables. Some entries may override variables
  # set by alacritty itself.
  #env:
    # TERM variable
    #
    # This value is used to set the `$TERM` environment variable for
    # each instance of Alacritty. If it is not present, alacritty will
    # check the local terminfo database and use `alacritty` if it is
    # available, otherwise `xterm-256color` is used.
    #TERM: alacritty

  window:
    # Window dimensions (changes require restart)
    #
    # Number of lines/columns (not pixels) in the terminal. The number of columns
    # must be at least `2`, while using a value of `0` for columns and lines will
    # fall back to the window manager's recommended size.
    #dimensions:
    #  columns: 0
    #  lines: 0

    # Window position (changes require restart)
    #
    # Specified in number of pixels.
    # If the position is not set, the window manager will handle the placement.
    #position:
    #  x: 0
    #  y: 0

    # Window padding (changes require restart)
    #
    # Blank space added around the window in pixels. This padding is scaled
    # by DPI and the specified value is always added at both opposing sides.
    # padding:
      # x: 0
      # y: 0

    # Spread additional padding evenly around the terminal content.
    #dynamic_padding: false

    # Window decorations
    #
    # Values for `decorations`:
    #     - full: Borders and title bar
    #     - none: Neither borders nor title bar
    #
    decorations: full

    # Startup Mode (changes require restart)
    #
    # Values for `startup_mode`:
    #   - Windowed
    #   - Maximized
    #   - Fullscreen
    #
    startup_mode: Windowed

    # Window title
    #title: Alacritty

    # Allow terminal applications to change Alacritty's window title.
    #dynamic_title: true

  # scrolling:
    # Maximum number of lines in the scrollback buffer.
    # Specifying '0' will disable scrolling.
    # history: 0

    # Scrolling distance multiplier.
    #multiplier: 3

#+end_src

*** Fonts

#+begin_src sh :tangle ../.config/alacritty/alacritty.yml

  # Font configuration
  font:
    # Normal (roman) font face
    normal:
      # Font family
      family: "Source Code Pro"

      # The `style` can be specified to pick a specific face.
      #style: Regular

    # Bold font face
    #bold:
      # Font family
      #
      # If the bold family is not specified, it will fall back to the
      # value specified for the normal font.
      #family: monospace

      # The `style` can be specified to pick a specific face.
      #style: Bold

    # Italic font face
    #italic:
      # Font family
      #
      # If the italic family is not specified, it will fall back to the
      # value specified for the normal font.
      #family: monospace

      # The `style` can be specified to pick a specific face.
      #style: Italic

    # Bold italic font face
    #bold_italic:
      # Font family
      #
      # If the bold italic family is not specified, it will fall back to the
      # value specified for the normal font.
      #family: monospace

      # The `style` can be specified to pick a specific face.
      #style: Bold Italic

    # Point size
    #size: 11.0

    # Offset is the extra space around each character. `offset.y` can be thought
    # of as modifying the line spacing, and `offset.x` as modifying the letter
    # spacing.
    #offset:
    #  x: 0
    #  y: 0

    # Glyph offset determines the locations of the glyphs within their cells with
    # the default being at the bottom. Increasing `x` moves the glyph to the
    # right, increasing `y` moves the glyph upward.
    #glyph_offset:
    #  x: 0
    #  y: 0

  # If `true`, bold text is drawn using the bright color variants.
  #draw_bold_text_with_bright_colors: false

#+end_src

*** Colors

#+begin_src sh :tangle ../.config/alacritty/alacritty.yml

  # Base16 Gruvbox dark, hard 256 - alacritty color config
  # Dawid Kurek (dawikur@gmail.com), morhetz (https://github.com/morhetz/gruvbox)
  colors:
    # Default colors
    primary:
      background: '#1d2021'
      foreground: '#d5c4a1'

      # Bright and dim foreground colors
      #
      # The dimmed foreground color is calculated automatically if it is not
      # present. If the bright foreground color is not set, or
      # `draw_bold_text_with_bright_colors` is `false`, the normal foreground
      # color will be used.
      #dim_foreground: '#828482'
      #bright_foreground: '#eaeaea'

    # Cursor colors
    #
    # Colors which should be used to draw the terminal cursor.
    #
    # Allowed values are CellForeground/CellBackground, which reference the
    # affected cell, or hexadecimal colors like #ff00ff.
    cursor:
      text: '#1d2021'
      cursor: '#d5c4a1'

    # Vi mode cursor colors
    #
    # Colors for the cursor when the vi mode is active.
    #
    # Allowed values are CellForeground/CellBackground, which reference the
    # affected cell, or hexadecimal colors like #ff00ff.
    #vi_mode_cursor:
    #  text: CellBackground
    #  cursor: CellForeground

    # Search colors
    #
    # Colors used for the search bar and match highlighting.
    #search:
      # Allowed values are CellForeground/CellBackground, which reference the
      # affected cell, or hexadecimal colors like #ff00ff.
      #matches:
      #  foreground: '#000000'
      #  background: '#ffffff'
      #focused_match:
      #  foreground: '#ffffff'
      #  background: '#000000'

      #bar:
      #  background: '#c5c8c6'
      #  foreground: '#1d1f21'

    # Keyboard regex hints
    #hints:
      # First character in the hint label
      #
      # Allowed values are CellForeground/CellBackground, which reference the
      # affected cell, or hexadecimal colors like #ff00ff.
      #start:
      #  foreground: '#1d1f21'
      #  background: '#e9ff5e'

      # All characters after the first one in the hint label
      #
      # Allowed values are CellForeground/CellBackground, which reference the
      # affected cell, or hexadecimal colors like #ff00ff.
      #end:
      #  foreground: '#e9ff5e'
      #  background: '#1d1f21'

    # Line indicator
    #
    # Color used for the indicator displaying the position in history during
    # search and vi mode.
    #
    # By default, these will use the opposing primary color.
    #line_indicator:
    #  foreground: None
    #  background: None

    # Selection colors
    #
    # Colors which should be used to draw the selection area.
    #
    # Allowed values are CellForeground/CellBackground, which reference the
    # affected cell, or hexadecimal colors like #ff00ff.
    #selection:
    #  text: CellBackground
    #  background: CellForeground

    # Normal colors
    normal:
      black:   '#1d2021'
      red:     '#fb4934'
      green:   '#b8bb26'
      yellow:  '#fabd2f'
      blue:    '#83a598'
      magenta: '#d3869b'
      cyan:    '#8ec07c'
      white:   '#d5c4a1'

    # Bright colors
    bright:
      black:   '#665c54'
      red:     '#fb4934'
      green:   '#b8bb26'
      yellow:  '#fabd2f'
      blue:    '#83a598'
      magenta: '#d3869b'
      cyan:    '#8ec07c'
      white:   '#fbf1c7'

    # Dim colors
    #
    # If the dim colors are not set, they will be calculated automatically based
    # on the `normal` colors.
    #dim:
    #  black:   '#131415'
    #  red:     '#864343'
    #  green:   '#777c44'
    #  yellow:  '#9e824c'
    #  blue:    '#556a7d'
    #  magenta: '#75617b'
    #  cyan:    '#5b7d78'
    #  white:   '#828482'

    # Indexed Colors
    #
    # The indexed colors include all colors from 16 to 256.
    # When these are not set, they're filled with sensible defaults.
    #
    # Example:
    #   `- { index: 16, color: '#ff00ff' }`
    #
    indexed_colors:
      - { index: 16, color: '#fe8019' }
      - { index: 17, color: '#d65d0e' }
      - { index: 18, color: '#3c3836' }
      - { index: 19, color: '#504945' }
      - { index: 20, color: '#bdae93' }
      - { index: 21, color: '#ebdbb2' }

#+end_src

*** Misc

#+begin_src sh :tangle ../.config/alacritty/alacritty.yml

  # Bell
  #
  # The bell is rung every time the BEL control character is received.
  #bell:
    # Visual Bell Animation
    #
    # Animation effect for flashing the screen when the visual bell is rung.
    #
    # Values for `animation`:
    #   - Ease
    #   - EaseOut
    #   - EaseOutSine
    #   - EaseOutQuad
    #   - EaseOutCubic
    #   - EaseOutQuart
    #   - EaseOutQuint
    #   - EaseOutExpo
    #   - EaseOutCirc
    #   - Linear
    #animation: EaseOutExpo

    # Duration of the visual bell flash in milliseconds. A `duration` of `0` will
    # disable the visual bell animation.
    #duration: 0

    # Visual bell animation color.
    #color: '#ffffff'

    # Bell Command
    #
    # This program is executed whenever the bell is rung.
    #
    # When set to `command: None`, no command will be executed.
    #
    # Example:
    #   command:
    #     program: notify-send
    #     args: ["Hello, World!"]
    #
    #command: None

  # Background opacity
  #
  # Window opacity as a floating point number from `0.0` to `1.0`.
  # The value `0.0` is completely transparent and `1.0` is opaque.
  #background_opacity: 1.0

  #selection:
    # This string contains all characters that are used as separators for
    # "semantic words" in Alacritty.
    #semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>\t"

    # When set to `true`, selected text will be copied to the primary clipboard.
    #save_to_clipboard: false

  #cursor:
    # Cursor style
    #style:
      # Cursor shape
      #
      # Values for `shape`:
      #   - â–‡ Block
      #   - _ Underline
      #   - | Beam
      #shape: Block

      # Cursor blinking state
      #
      # Values for `blinking`:
      #   - Never: Prevent the cursor from ever blinking
      #   - Off: Disable blinking by default
      #   - On: Enable blinking by default
      #   - Always: Force the cursor to always blink
      #blinking: Off

    # Vi mode cursor style
    #
    # If the vi mode cursor style is `None` or not specified, it will fall back to
    # the style of the active value of the normal cursor.
    #
    # See `cursor.style` for available options.
    #vi_mode_style: None

    # Cursor blinking interval in milliseconds.
    #blink_interval: 750

    # If this is `true`, the cursor will be rendered as a hollow box when the
    # window is not focused.
    #unfocused_hollow: true

    # Thickness of the cursor relative to the cell width as floating point number
    # from `0.0` to `1.0`.
    #thickness: 0.15

  # Live config reload (changes require restart)
  #live_config_reload: true

#+end_src

*** Shell

#+begin_src sh :tangle ../.config/alacritty/alacritty.yml

  # Shell
  #
  # You can set `shell.program` to the path of your favorite shell, e.g.
  # `/bin/fish`. Entries in `shell.args` are passed unmodified as arguments to the
  # shell.
  shell:
    program: /bin/fish
  #  args:
  #    - --login

  # Startup directory
  #
  # Directory the shell is started in. If this is unset, or `None`, the working
  # directory of the parent process will be used.
  #working_directory: None

  # Send ESC (\x1b) before characters when alt is pressed.
  #alt_send_esc: true

  #mouse:
    # Click settings
    #
    # The `double_click` and `triple_click` settings control the time
    # alacritty should wait for accepting multiple clicks as one double
    # or triple click.
    #double_click: { threshold: 300 }
    #triple_click: { threshold: 300 }

    # If this is `true`, the cursor is temporarily hidden when typing.
    #hide_when_typing: false

  # Regex hints
  #
  # Terminal hints can be used to find text in the visible part of the terminal
  # and pipe it to other applications.
  #hints:
    # Keys used for the hint labels.
    #alphabet: "jfkdls;ahgurieowpq"

    # List with all available hints
    #
    # Each hint must have a `regex` and either an `action` or a `command` field.
    # The fields `mouse`, `binding` and `post_processing` are optional.
    #
    # The fields `command`, `binding.key`, `binding.mods` and `mouse.mods` accept
    # the same values as they do in the `key_bindings` section.
    #
    # The `mouse.enabled` field controls if the hint should be underlined while
    # the mouse with all `mouse.mods` keys held or the vi mode cursor is above it.
    #
    # If the `post_processing` field is set to `true`, heuristics will be used to
    # shorten the match if there are characters likely not to be part of the hint
    # (e.g. a trailing `.`). This is most useful for URIs.
    #
    # Values for `action`:
    #   - Copy
    #       Copy the hint's text to the clipboard.
    #   - Paste
    #       Paste the hint's text to the terminal or search.
    #   - Select
    #       Select the hint's text.
    #   - MoveViModeCursor
    #       Move the vi mode cursor to the beginning of the hint.
    #enabled:
    # - regex: "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
    #           [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^âŸ¨âŸ©`]+"
    #   command: xdg-open
    #   post_processing: true
    #   mouse:
    #     enabled: true
    #     mods: None
    #     binding:
    #     key: U
    #       mods: Control|Shift

#+end_src

*** Mouse bindings

#+begin_src sh :tangle ../.config/alacritty/alacritty.yml

  # Mouse bindings
  #
  # Mouse bindings are specified as a list of objects, much like the key
  # bindings further below.
  #
  # To trigger mouse bindings when an application running within Alacritty
  # captures the mouse, the `Shift` modifier is automatically added as a
  # requirement.
  #
  # Each mouse binding will specify a:
  #
  # - `mouse`:
  #
  #   - Middle
  #   - Left
  #   - Right
  #   - Numeric identifier such as `5`
  #
  # - `action` (see key bindings)
  #
  # And optionally:
  #
  # - `mods` (see key bindings)
  #mouse_bindings:
  #  - { mouse: Middle, action: PasteSelection }

#+end_src

*** Key bindings

#+begin_src sh :tangle ../.config/alacritty/alacritty.yml

  # Key bindings
  #
  # Key bindings are specified as a list of objects. For example, this is the
  # default paste binding:
  #
  # `- { key: V, mods: Control|Shift, action: Paste }`
  #
  # Each key binding will specify a:
  #
  # - `key`: Identifier of the key pressed
  #
  #    - A-Z
  #    - F1-F24
  #    - Key0-Key9
  #
  #    A full list with available key codes can be found here:
  #    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
  #
  #    Instead of using the name of the keys, the `key` field also supports using
  #    the scancode of the desired key. Scancodes have to be specified as a
  #    decimal number. This command will allow you to display the hex scancodes
  #    for certain keys:
  #
  #       `showkey --scancodes`.
  #
  # Then exactly one of:
  #
  # - `chars`: Send a byte sequence to the running application
  #
  #    The `chars` field writes the specified string to the terminal. This makes
  #    it possible to pass escape sequences. To find escape codes for bindings
  #    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
  #    of tmux. Note that applications use terminfo to map escape sequences back
  #    to keys. It is therefore required to update the terminfo when changing an
  #    escape sequence.
  #
  # - `action`: Execute a predefined action
  #
  #   - ToggleViMode
  #   - SearchForward
  #       Start searching toward the right of the search origin.
  #   - SearchBackward
  #       Start searching toward the left of the search origin.
  #   - Copy
  #   - Paste
  #   - IncreaseFontSize
  #   - DecreaseFontSize
  #   - ResetFontSize
  #   - ScrollPageUp
  #   - ScrollPageDown
  #   - ScrollHalfPageUp
  #   - ScrollHalfPageDown
  #   - ScrollLineUp
  #   - ScrollLineDown
  #   - ScrollToTop
  #   - ScrollToBottom
  #   - ClearHistory
  #       Remove the terminal's scrollback history.
  #   - Hide
  #       Hide the Alacritty window.
  #   - Minimize
  #       Minimize the Alacritty window.
  #   - Quit
  #       Quit Alacritty.
  #   - ToggleFullscreen
  #   - SpawnNewInstance
  #       Spawn a new instance of Alacritty.
  #   - ClearLogNotice
  #       Clear Alacritty's UI warning and error notice.
  #   - ClearSelection
  #       Remove the active selection.
  #   - ReceiveChar
  #   - None
  #
  # - Vi mode exclusive actions:
  #
  #   - Open
  #       Perform the action of the first matching hint under the vi mode cursor
  #       with `mouse.enabled` set to `true`.
  #   - ToggleNormalSelection
  #   - ToggleLineSelection
  #   - ToggleBlockSelection
  #   - ToggleSemanticSelection
  #       Toggle semantic selection based on `selection.semantic_escape_chars`.
  #
  # - Vi mode exclusive cursor motion actions:
  #
  #   - Up
  #       One line up.
  #   - Down
  #       One line down.
  #   - Left
  #       One character left.
  #   - Right
  #       One character right.
  #   - First
  #       First column, or beginning of the line when already at the first column.
  #   - Last
  #       Last column, or beginning of the line when already at the last column.
  #   - FirstOccupied
  #       First non-empty cell in this terminal row, or first non-empty cell of
  #       the line when already at the first cell of the row.
  #   - High
  #       Top of the screen.
  #   - Middle
  #       Center of the screen.
  #   - Low
  #       Bottom of the screen.
  #   - SemanticLeft
  #       Start of the previous semantically separated word.
  #   - SemanticRight
  #       Start of the next semantically separated word.
  #   - SemanticLeftEnd
  #       End of the previous semantically separated word.
  #   - SemanticRightEnd
  #       End of the next semantically separated word.
  #   - WordLeft
  #       Start of the previous whitespace separated word.
  #   - WordRight
  #       Start of the next whitespace separated word.
  #   - WordLeftEnd
  #       End of the previous whitespace separated word.
  #   - WordRightEnd
  #       End of the next whitespace separated word.
  #   - Bracket
  #       Character matching the bracket at the cursor's location.
  #   - SearchNext
  #       Beginning of the next match.
  #   - SearchPrevious
  #       Beginning of the previous match.
  #   - SearchStart
  #       Start of the match to the left of the vi mode cursor.
  #   - SearchEnd
  #       End of the match to the right of the vi mode cursor.
  #
  # - Search mode exclusive actions:
  #   - SearchFocusNext
  #       Move the focus to the next search match.
  #   - SearchFocusPrevious
  #       Move the focus to the previous search match.
  #   - SearchConfirm
  #   - SearchCancel
  #   - SearchClear
  #       Reset the search regex.
  #   - SearchDeleteWord
  #       Delete the last word in the search regex.
  #   - SearchHistoryPrevious
  #       Go to the previous regex in the search history.
  #   - SearchHistoryNext
  #       Go to the next regex in the search history.
  #
  # - Linux/BSD exclusive actions:
  #
  #   - CopySelection
  #       Copy from the selection buffer.
  #   - PasteSelection
  #       Paste from the selection buffer.
  #
  # - `command`: Fork and execute a specified command plus arguments
  #
  #    The `command` field must be a map containing a `program` string and an
  #    `args` array of command line parameter strings. For example:
  #       `{ program: "alacritty", args: ["-e", "vttest"] }`
  #
  # And optionally:
  #
  # - `mods`: Key modifiers to filter binding actions
  #
  #    - Command
  #    - Control
  #    - Option
  #    - Super
  #    - Shift
  #    - Alt
  #
  #    Multiple `mods` can be combined using `|` like this:
  #       `mods: Control|Shift`.
  #    Whitespace and capitalization are relevant and must match the example.
  #
  # - `mode`: Indicate a binding for only specific terminal reported modes
  #
  #    This is mainly used to send applications the correct escape sequences
  #    when in different modes.
  #
  #    - AppCursor
  #    - AppKeypad
  #    - Search
  #    - Alt
  #    - Vi
  #
  #    A `~` operator can be used before a mode to apply the binding whenever
  #    the mode is *not* active, e.g. `~Alt`.
  #
  # Bindings are always filled by default, but will be replaced when a new
  # binding with the same triggers is defined. To unset a default binding, it can
  # be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
  # a no-op if you do not wish to receive input characters for that binding.
  #
  # If the same trigger is assigned to multiple actions, all of them are executed
  # in the order they were defined in.
  key_bindings:
    #- { key: Paste,                                       action: Paste          }
    #- { key: Copy,                                        action: Copy           }
    #- { key: L,         mods: Control,                    action: ClearLogNotice }
    #- { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }
    #- { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp,  }
    #- { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }
    #- { key: Home,      mods: Shift,   mode: ~Alt,        action: ScrollToTop,   }
    #- { key: End,       mods: Shift,   mode: ~Alt,        action: ScrollToBottom }

    # Vi Mode
    #- { key: Space,  mods: Shift|Control, mode: Vi|~Search, action: ScrollToBottom          }
    #- { key: Space,  mods: Shift|Control, mode: ~Search,    action: ToggleViMode            }
    #- { key: Escape,                      mode: Vi|~Search, action: ClearSelection          }
    #- { key: I,                           mode: Vi|~Search, action: ScrollToBottom          }
    #- { key: I,                           mode: Vi|~Search, action: ToggleViMode            }
    #- { key: C,      mods: Control,       mode: Vi|~Search, action: ToggleViMode            }
    #- { key: Y,      mods: Control,       mode: Vi|~Search, action: ScrollLineUp            }
    #- { key: E,      mods: Control,       mode: Vi|~Search, action: ScrollLineDown          }
    #- { key: G,                           mode: Vi|~Search, action: ScrollToTop             }
    #- { key: G,      mods: Shift,         mode: Vi|~Search, action: ScrollToBottom          }
    #- { key: B,      mods: Control,       mode: Vi|~Search, action: ScrollPageUp            }
    #- { key: F,      mods: Control,       mode: Vi|~Search, action: ScrollPageDown          }
    #- { key: U,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageUp        }
    #- { key: D,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageDown      }
    #- { key: Y,                           mode: Vi|~Search, action: Copy                    }
    #- { key: Y,                           mode: Vi|~Search, action: ClearSelection          }
    #- { key: Copy,                        mode: Vi|~Search, action: ClearSelection          }
    #- { key: V,                           mode: Vi|~Search, action: ToggleNormalSelection   }
    #- { key: V,      mods: Shift,         mode: Vi|~Search, action: ToggleLineSelection     }
    #- { key: V,      mods: Control,       mode: Vi|~Search, action: ToggleBlockSelection    }
    #- { key: V,      mods: Alt,           mode: Vi|~Search, action: ToggleSemanticSelection }
    #- { key: Return,                      mode: Vi|~Search, action: Open                    }
    #- { key: K,                           mode: Vi|~Search, action: Up                      }
    #- { key: J,                           mode: Vi|~Search, action: Down                    }
    #- { key: H,                           mode: Vi|~Search, action: Left                    }
    #- { key: L,                           mode: Vi|~Search, action: Right                   }
    #- { key: Up,                          mode: Vi|~Search, action: Up                      }
    #- { key: Down,                        mode: Vi|~Search, action: Down                    }
    #- { key: Left,                        mode: Vi|~Search, action: Left                    }
    #- { key: Right,                       mode: Vi|~Search, action: Right                   }
    #- { key: Key0,                        mode: Vi|~Search, action: First                   }
    #- { key: Key4,   mods: Shift,         mode: Vi|~Search, action: Last                    }
    #- { key: Key6,   mods: Shift,         mode: Vi|~Search, action: FirstOccupied           }
    #- { key: H,      mods: Shift,         mode: Vi|~Search, action: High                    }
    #- { key: M,      mods: Shift,         mode: Vi|~Search, action: Middle                  }
    #- { key: L,      mods: Shift,         mode: Vi|~Search, action: Low                     }
    #- { key: B,                           mode: Vi|~Search, action: SemanticLeft            }
    #- { key: W,                           mode: Vi|~Search, action: SemanticRight           }
    #- { key: E,                           mode: Vi|~Search, action: SemanticRightEnd        }
    #- { key: B,      mods: Shift,         mode: Vi|~Search, action: WordLeft                }
    #- { key: W,      mods: Shift,         mode: Vi|~Search, action: WordRight               }
    #- { key: E,      mods: Shift,         mode: Vi|~Search, action: WordRightEnd            }
    #- { key: Key5,   mods: Shift,         mode: Vi|~Search, action: Bracket                 }
    #- { key: Slash,                       mode: Vi|~Search, action: SearchForward           }
    #- { key: Slash,  mods: Shift,         mode: Vi|~Search, action: SearchBackward          }
    #- { key: N,                           mode: Vi|~Search, action: SearchNext              }
    #- { key: N,      mods: Shift,         mode: Vi|~Search, action: SearchPrevious          }

    # Search Mode
    #- { key: Return,                mode: Search|Vi,  action: SearchConfirm         }
    #- { key: Escape,                mode: Search,     action: SearchCancel          }
    #- { key: C,      mods: Control, mode: Search,     action: SearchCancel          }
    #- { key: U,      mods: Control, mode: Search,     action: SearchClear           }
    #- { key: W,      mods: Control, mode: Search,     action: SearchDeleteWord      }
    #- { key: P,      mods: Control, mode: Search,     action: SearchHistoryPrevious }
    #- { key: N,      mods: Control, mode: Search,     action: SearchHistoryNext     }
    #- { key: Up,                    mode: Search,     action: SearchHistoryPrevious }
    #- { key: Down,                  mode: Search,     action: SearchHistoryNext     }
    #- { key: Return,                mode: Search|~Vi, action: SearchFocusNext       }
    #- { key: Return, mods: Shift,   mode: Search|~Vi, action: SearchFocusPrevious   }

    # (Windows, Linux, and BSD only)
    #- { key: V,              mods: Control|Shift, mode: ~Vi,        action: Paste            }
    - { key: V,        mods: Alt, action: Paste                            }
    #- { key: C,              mods: Control|Shift,                   action: Copy             }
    - { key: C,        mods: Alt, action: Copy                             }
    #- { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
    #- { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
    #- { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
    #- { key: Insert,         mods: Shift,                           action: PasteSelection   }
    #- { key: Key0,           mods: Control,                         action: ResetFontSize    }
    #- { key: Equals,         mods: Control,                         action: IncreaseFontSize }
    #- { key: Plus,           mods: Control,                         action: IncreaseFontSize }
    #- { key: NumpadAdd,      mods: Control,                         action: IncreaseFontSize }
    #- { key: Minus,          mods: Control,                         action: DecreaseFontSize }
    #- { key: NumpadSubtract, mods: Control,                         action: DecreaseFontSize }

    # (macOS only)
    #- { key: K,              mods: Command, mode: ~Vi|~Search, chars: "\x0c"            }
    #- { key: K,              mods: Command, mode: ~Vi|~Search, action: ClearHistory     }
    #- { key: Key0,           mods: Command,                    action: ResetFontSize    }
    #- { key: Equals,         mods: Command,                    action: IncreaseFontSize }
    #- { key: Plus,           mods: Command,                    action: IncreaseFontSize }
    #- { key: NumpadAdd,      mods: Command,                    action: IncreaseFontSize }
    #- { key: Minus,          mods: Command,                    action: DecreaseFontSize }
    #- { key: NumpadSubtract, mods: Command,                    action: DecreaseFontSize }
    #- { key: V,              mods: Command,                    action: Paste            }
    #- { key: C,              mods: Command,                    action: Copy             }
    #- { key: C,              mods: Command, mode: Vi|~Search,  action: ClearSelection   }
    #- { key: H,              mods: Command,                    action: Hide             }
    #- { key: H,              mods: Command|Alt,                action: HideOtherApplications }
    #- { key: M,              mods: Command,                    action: Minimize         }
    #- { key: Q,              mods: Command,                    action: Quit             }
    #- { key: W,              mods: Command,                    action: Quit             }
    #- { key: N,              mods: Command,                    action: SpawnNewInstance }
    #- { key: F,              mods: Command|Control,            action: ToggleFullscreen }
    #- { key: F,              mods: Command, mode: ~Search,     action: SearchForward    }
    #- { key: B,              mods: Command, mode: ~Search,     action: SearchBackward   }

#+end_src

*** Debug

#+begin_src sh :tangle ../.config/alacritty/alacritty.yml

  #debug:
    # Display the time it takes to redraw each frame.
    #render_timer: false

    # Keep the log file after quitting Alacritty.
    #persistent_logging: false

    # Log level
    #
    # Values for `log_level`:
    #   - Off
    #   - Error
    #   - Warn
    #   - Info
    #   - Debug
    #   - Trace
    #log_level: Warn

    # Print all received window events.
    #print_events: false

#+end_src

** Firefox

#+begin_src css :tangle ../.mozilla/firefox/chrome/userChrome.css :mkdirp yes
  @-moz-document url(chrome://browser/content/browser.xhtml) {
      /* toolkit.legacyUserProfileCustomizations.stylesheets = true*/
      #mainPopupSet ~ box { -moz-box-ordinal-group: 10; }
      #titlebar { -moz-box-ordinal-group: 10; }
      #urlbar {
          top: unset !important;
          bottom: calc((var(--urlbar-toolbar-height) - var(--urlbar-height)) / 2) !important;
          box-shadow: none !important;
          display: flex !important;
          flex-direction: column !important;
      }
      #urlbar-input-container {
          order: 2;
      }
      #urlbar > .urlbarView {
          order: 1;
          border-bottom: 1px solid #666;
      }
      #urlbar-results {
          display: flex;
          flex-direction: column-reverse;
      }
      .search-one-offs { display: none !important; }
      .tab-background { border-top: none !important; }
      #navigator-toolbox::after { border: none; }
      #TabsToolbar .tabbrowser-arrowscrollbox,
      #tabbrowser-tabs, .tab-stack { min-height: 28px !important; }
      .tabbrowser-tab { font-size: 80%; }
      .tab-content { padding: 0 5px; }
      .tab-close-button .toolbarbutton-icon { width: 12px !important; height: 12px !important; }
      toolbox[inFullscreen=true] { display: none; }
  }
#+end_src

** Ideavim

#+begin_src sh :tangle ../.ideavimrc
  "" initial settings
  set clipboard=unnamed,autoselect
  set hlsearch
  set ignorecase
  set incsearch
  set smartcase
  set showmode

  "" plugins
  set surround

  "" better indentation
  gnoremap < <gv
  vnoremap > >gv

  "" move vertically by visual line
  nnoremap j gj
  nnoremap k gk
#+end_src

** Neovim

#+begin_src sh :tangle ../.config/nvim/init.vim :mkdirp yes

  "" initial settings
  set encoding=utf-8
  set nocompatible
  set timeoutlen=1000 ttimeoutlen=0
  set autoread
  set showmatch
  syntax enable

  set tabstop=4
  set softtabstop=2
  set shiftwidth=4
  set shiftround
  set expandtab
  set number
  set ruler
  set wildmenu

  set mouse=a
  set bs=2
  set clipboard=unnamed
  set history=700
  set undolevels=700

  filetype indent on
  filetype on
  filetype plugin on

  "" infinite undo
  set undofile

  "" Searching
  set hlsearch
  set ignorecase
  set incsearch
  set smartcase

  "" backup and swap settings
  set nobackup
  set nowritebackup
  set noswapfile

  "" better indentation
  vnoremap < <gv
  vnoremap > >gv

  "" Movement
  map <c-j> <c-w>j
  map <c-k> <c-w>k
  map <c-l> <c-w>l
  map <c-h> <c-w>h

  "" move vertically by visual line
  nnoremap j gj
  nnoremap k gk

  let mapleader=","

  "" switch between tabs
  map <Leader>, <esc>:tabprevious<CR>
  map <Leader>. <esc>:tabnext<CR>

  "" Leader shortcuts
  vnoremap <Leader>s :sort n<CR>
  nnoremap <leader><space> :nohlsearch<CR>
#+end_src

** Shells
*** Fish

#+begin_src sh :tangle ../.config/fish/config.fish :mkdirp yes
  abbr -a vim nvim
  abbr -a vimdiff 'nvim -d'
  abbr -a e 'emacsclient -n -c'

  abbr -a p 'sudo pacman'
  abbr -a up 'sudo pacman -Syu'

  if command -v exa > /dev/null
     abbr -a l 'exa'
     abbr -a ls 'exa'
     abbr -a ll 'exa -l'
     abbr -a lll 'exa -la'
  else
      abbr -a l 'ls'
      abbr -a ll 'ls -l'
      abbr -a lll 'ls -la'
  end

  if command -v zoxide > /dev/null
     zoxide init fish | source
     abbr -a cd z
  end

  abbr -a g git
  abbr -a c cargo

#+end_src
